/**
 * 
 */
package org.tonoplace.mcmods.timetracker;


import java.util.Date;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.tonoplace.mcmods.timetracker.proxies.ServerProxy;

import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import cpw.mods.fml.common.gameevent.TickEvent;
import cpw.mods.fml.common.gameevent.TickEvent.ServerTickEvent;

/**
 * @author BlackTachyon
 *
 */
public class Timer {
   int count = 0;
   public static final Logger logger = LogManager.getFormatterLogger(ModInfo.MODID);
   private Date lastSaved = null;
   private static final int MIN_AUTO_SAVE_TICKS = 50;
   private static final int MAX_AUTO_SAVE_TICKS = 20 * 60 * 8;
   private static final int AUTO_SAVE_MINUTES   = 10;
   private int nextCheck = -1;
@SubscribeEvent
public void onServerTick(ServerTickEvent ste) {

   if(nextCheck < MIN_AUTO_SAVE_TICKS)
   {
      long maxTicks = AUTO_SAVE_MINUTES * 60 * 20;
      nextCheck = maxTicks / 3;
      nextCheck = Math.min(MAX_AUTO_SAVE_TICKS, nextCheck);
      nextCheck = Math.max(MIN_AUTO_SAVE_TICKS, nextCheck);
      logger.info("Setting auto-save server check to " + nextCheck + " server ticks.");
   }
   if(ste.phase==TickEvent.Phase.START) {
      count = count % nextCheck;
      if(count==0) {
         if(lastSaved==null)
            lastSaved = new Date();
         logger.info("ServerTickEvent...(" + nextCheck + ")");
         Date now = new Date();
         long secondsDiff = (now.getTime() - lastSaved.getTime()) / 1000;  
         if( secondsDiff >= AUTO_SAVE_MINUTES * 60) {
            logger.info("Server auto-saving stats...);");
            TimeTrackerMod.autoSave();
            lastSaved = now;
            nextCheck = -1;
         } else {
            nextCheck = (int) (secondsDiff / 3);
            nextCheck = Math.min(MAX_AUTO_SAVE_TICKS, nextCheck);
            nextCheck = Math.max(MIN_AUTO_SAVE_TICKS, nextCheck);
            logger.info("Setting auto-save server check to " + nextCheck + " server ticks.");            
         }
      }
      count++;
   }
   //System.out.println("Detected Server Stoppping");
}

}
